server:
  port: 8081

  error:
    whitelabel:
      enabled: false

spring:
  profiles:
    active: dev
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:3303/localizationdb?useUnicode=true&characterEncoding=utf8&useSSL=true&useLegacyDatetimeCode=false&serverTimezone=UTC #${ENGINE_DB_URL}
    username: wilki #${DB_USER_NAME}
    password: wilki123 #${DB_USER_PASS}
    driver-class-name: com.mysql.cj.jdbc.Driver
  flyway:
    locations: classpath:db/migration
    datasources:
      default:
        enabled: true
    baseline-on-migrate: true
    ignore-future-migrations: false

  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database-platform: org.hibernate.dialect.MySQL57Dialect
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:7080/realms/my-realm/protocol/openid-connect/certs

  rabbitmq:
    host: localhost
    port: 5672
    username: rabbit
    password: rabbit

  messages:
    basename: messages/messages

  servlet:
    multipart:
      max-file-size: 15MB
      max-request-size: 10MB

  mvc:
    path:
      match:
        matching-strategy: ant-path-matcher
  jackson:
    serialization:
      fail-on-empty-beans: false

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl.defaultZone: http://localhost:7070/eureka/


management:
  health:
    circuit-breakers:
      enabled: true
    rate-limiters:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

  # Micrometer related properties
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans


resilience4j:circuitbreaker:
  instances:
    detailsForCustomerSupportApp:
      minimum-number-of-calls: 5
      failure-rate-threshold: 5
      wait-duration-in-open-state: 3000
      permitted-number-of-calls-in-half-open-state: 2
  configs:
    default:
      register-health-indicator:


resilience4j.rate-limiter:
  instances:
    sayHello:
      limit-for-period: 1
      limit-refresh-period: 1s
      timeout-duration: 0
      register-health-indicator: true
      event-consumer-buffer-size: 1


# traceID and spanId are predefined MDC keys - we want the logs to include them
logging:
  level:
    org.springframework.web: DEBUG
  pattern:
    level: 5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]






